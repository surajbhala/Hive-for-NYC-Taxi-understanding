--- Pre-requisite
ADD JAR /opt/cloudera/parcels/CDH/lib/hive/lib/hive-hcatalog-core-1.1.0-cdh5.11.2.jar;
SET hive.exec.max.dynamic.partitions=100000;
SET hive.exec.max.dynamic.partitions.pernode=100000;

-- Dropping table if it exists already
drop table if exists nyc_taxi_case_study_sh;

-- Creating intial table
create external table if not exists nyc_taxi_case_study_sh(VendorID int, tpep_pickup_datetime string,
tpep_dropoff_datetime string, passenger_count int, trip_distance double,RatecodeID int,store_and_fwd_flag string,
PULocationID int, DOLocationID int,payment_type int, fare_amount double, extra double,
mta_tax double,tip_amount double, tolls_amount double, improvement_surcharge double, total_amount double)
row format delimited fields terminated by ','
location '/common_folder/nyc_taxi_data/'
tblproperties ("skip.header.line.count"="1");

-- Verifying the table created is correct according to the given format.
select * from nyc_taxi_case_study_sh limit 5;

-- Checking the number of records in the table
select count(*) as num_records from nyc_taxi_case_study_sh;

-- The total number of records = 1174569

-- Data quality check to ensure that no other Vendor than 1 or 2 is present
select VendorID from 
nyc_taxi_case_study_sh
where VendorID != 1
and VendorID != 2;

-- The output is null indicating that all the records have either 1 or 2 as Vendor ID


-- We group by Vendor ID to check how many rides has each vendor completed
select count(*) as TPEP_provider_count from nyc_taxi_case_study_sh
group by VendorID;
-- Vendor ID  Trips completed
--    1            647183   
--    2            527386

-- Checking the error for year and month columns 
select VendorID, month(tpep_pickup_datetime) as month_pickup, year(tpep_pickup_datetime) as year_pickup ,count(*) as num_records
from nyc_taxi_case_study_sh
group by VendorID,month(tpep_pickup_datetime),year(tpep_pickup_datetime) ;
-- 	vendorid	month_pickup  year_pickup	num_records
--	    1	            12	        2017	266104
--	    2	            1	        2003	1
--	    2	            1   	    2009	1
--	    2	            11	        2017	319018
--	    2	            12	        2008	2
--	    1	            11	        2017	261282
--	    2	            1	        2018	4
--	    2	            10	        2017	6
--	    2	            12	        2017	328151


-- Checking for error in data reporting, like Passenger_count = 0
select VendorID,count(VendorID) as num_records, Passenger_count 
from nyc_taxi_case_study_sh
where Passenger_count == 0
group by Passenger_count,VendorID;


-- As can be seen the Vendor ID 1 : Creative Mobile Technologies has reported wrong passenger 
-- count 6813 times which is roughly 1% of the total trips
-- Vendor ID 2 has only reported 11 error records i.e. having passenger count = 0



-- Checking for error in data reporting, like Trip distance <= 0
select VendorID,count(VendorID) as num_records, trip_distance 
from nyc_taxi_case_study_sh
where trip_distance <= 0
group by VendorID,trip_distance
order by VendorID;

-- Vendor ID   Num records  
-- 1            4217
-- 2            3185


-- Checking for error in data reporting, like RatecodeID != (1,2,3,4,5,6)

select VendorID,count(VendorID) as num_records, RatecodeID 
from nyc_taxi_case_study_sh
where RatecodeID <= 0 or RatecodeID > 6
group by VendorID,RatecodeID
order by VendorID;
-- VendorID  Number_records    RateCodeID
--    1             8               99
--    2             1               99


-- Checking payment type for errors
select VendorID,count(VendorID) as num_records, payment_type 
from nyc_taxi_case_study_sh
where payment_type not in (1,2,3,4,5,6)
group by VendorID,payment_type;

-- No errors in payment type are present


-- Checking store and fwd flag type for errors
select VendorID,count(VendorID) as num_records, store_and_fwd_flag 
from nyc_taxi_case_study_sh
where store_and_fwd_flag not in ('Y','N')
group by VendorID,store_and_fwd_flag
order by VendorID;

-- No errors are present in the field store_and_fwd_flag


-- Checking PULocationID  for errors
select VendorID,count(VendorID) as num_records, PULocationID 
from nyc_taxi_case_study_sh
where PULocationID == 0
group by VendorID,PULocationID;

-- No errors are present in PULocationID


-- Checking DOLocationID for errors
select VendorID,count(VendorID) as num_records, DOLocationID 
from nyc_taxi_case_study_sh
where DOLocationID == 0
group by VendorID,DOLocationID;

-- No errors are present in DOLocationID

-- Checking fare_amount for errors
select VendorID,count(VendorID) as num_records, fare_amount 
from nyc_taxi_case_study_sh
where fare_amount <= 0
group by VendorID,fare_amount
order by VendorID;

-- We have 231 record for Vendor ID 1 having 0 fare amount
-- 639 records of Vendor 2 are present where fare amount is less than or equal to 0


-- Checking extra for errors
select VendorID,count(VendorID) as num_records, extra 
from nyc_taxi_case_study_sh
where extra < 0
group by VendorID,extra
order by VendorID;

-- We have 1 record having negative extra for Vendor ID 1
-- 285 records are present for negative extra amount for Vendor ID 2


-- Checking MTA_extra for errors
select VendorID,count(VendorID) as num_records, mta_tax 
from nyc_taxi_case_study_sh
where mta_tax not in (0,0.5)
group by VendorID,mta_tax
order by VendorID;

--- We have 1 records with values which aren't correct according to the data dictionary for Vendor ID 1
--- We have 547 records with values which aren't correct according to the data dictionary for Vendor ID 2


-- Checking Improvement_surcharge for errors
select VendorID,count(VendorID) as num_records, improvement_surcharge 
from nyc_taxi_case_study_sh
where improvement_surcharge not in (0,0.3)
group by VendorID,improvement_surcharge
order by VendorID;

-- We find 562 records of VendorID = 2, having value of improvement surcharge != 0.3,0


--- Checkig for negative tip amount
select VendorID,count(VendorID) as num_records, tip_amount 
from nyc_taxi_case_study_sh
where tip_amount < 0
group by VendorID,tip_amount
order by VendorID;

-- We can see that there are 4 records with negative tip amount and all are from vendor = 2


--- Checkig for negative tolls_amount
select VendorID,count(VendorID) as num_records, tolls_amount 
from nyc_taxi_case_study_sh
where tolls_amount < 0
group by VendorID,tolls_amount
order by VendorID;

-- We can see that there are 3 records with negative tip amount and all are from vendor = 2


--- Checkig for negative tolls_amount
select VendorID,count(VendorID) as num_records, total_amount 
from nyc_taxi_case_study_sh
where total_amount <= 0
group by VendorID,total_amount
order by VendorID;

-- There are 42 records with total amount 0 for Vendor ID = 1
-- 639 records of VendorID = 2 have negative or 0 total_amount


-- Now we will create partitioned tables
drop table if exists nyc_taxi_case_study_sh_partitioned_1;

-- We create a ORC partitioned table using year and month as the columns for partitioning
create external table if not exists nyc_taxi_case_study_sh_partitioned_1(VendorID int,tpep_pickup_datetime timestamp,
tpep_dropoff_datetime timestamp, passenger_count int, trip_distance double,RatecodeID int,store_and_fwd_flag string,
PULocationID int, DOLocationID int,payment_type int, fare_amount double, extra double,
mta_tax double,tip_amount double, tolls_amount double, improvement_surcharge double, total_amount double) partitioned by (yr int, mnth int)
stored as orc location '/user/hive/warehouse/sh_vendorid_partitioned_suraj'
tblproperties ("orc.compress"="SNAPPY");

-- Insert data into the newly created table
-- The filters are based on the EDA performed above 
insert overwrite table nyc_taxi_case_study_sh_partitioned_1 partition(yr,mnth)
select VendorID,  tpep_pickup_datetime ,tpep_dropoff_datetime , passenger_count,
trip_distance ,RatecodeID ,store_and_fwd_flag,
PULocationID , DOLocationID ,payment_type , fare_amount , extra ,
mta_tax ,tip_amount , tolls_amount , improvement_surcharge , total_amount,
year(tpep_pickup_datetime) as yr, month(tpep_pickup_datetime) as mnth
from nyc_taxi_case_study_sh
where year(tpep_pickup_datetime) = 2017
and month(tpep_pickup_datetime) in (11,12)
and passenger_count > 0
and trip_distance > 0
and RatecodeID in (1,2,3,4,5,6)
and payment_type in (1,2,3,4,5,6)
and fare_amount > 0
and extra in (0,0.5,1)
and mta_tax in (0,0.5)
and tip_amount >= 0
and tolls_amount >= 0
and improvement_surcharge in (0,0.3)
and total_amount > 0;

-- Verifying the generated table is correct 
select * from nyc_taxi_case_study_sh_partitioned_1 limit 10;

-- Checking the total number of records
select count(*) as num_records from nyc_taxi_case_study_sh_partitioned_1;

-- Thus we see that after applying filter we are left with 1155422 records which is 19147 records less than that of original table


-- Analysis 1 :

-- Q1 
-- The question is to calculate overall average fare per trip

-- We will be using total_amount as the fare as it is mentioned to calculate overall average fare

select avg(total_amount) as avg_fare_november
from nyc_taxi_case_study_sh_partitioned_1
where mnth = 11;
-- Average fare = 16.20

select avg(total_amount) as avg_fare_december
from nyc_taxi_case_study_sh_partitioned_1
where mnth = 12;
-- Average fare = 15.90

-- Thus the average fare for the Month of November is 0.30$ more as compared to December

-- Q2

select count(*) as num_records , passenger_count
from nyc_taxi_case_study_sh_partitioned_1
group by passenger_count
order by passenger_count;

-- Thus as can be seen 70.84% (818468 records) people prefer to travel solo

-- Q3.
select count(*) as num_records, payment_type
from nyc_taxi_case_study_sh_partitioned_1
group by payment_type
order by num_records desc;

-- The most preferred mode of payment type is Credit card having 67.50% (779809 records) share of all the payment modes

-- Q4
select avg(tip_amount) as mean_tip, percentile_approx(tip_amount,0.25) as 1st_quartile,
percentile_approx(tip_amount,0.50) as median, percentile_approx(tip_amount,0.75) as 3rd_quartile
from nyc_taxi_case_study_sh_partitioned_1;

-- Thus the 25th percentile is 0, 50th percentile(median) being 1.32 and 75th percentile = 2.45
-- The mean is 1.826 
-- Therefore we can conclude that the average tip is not a representative statistic of the `tip amount paid`


--Q5
select count(extra) as extra_charge_trip
from nyc_taxi_case_study_sh_partitioned_1
where extra != 0;

-- The fraction of trips where extra charge was levied = 46.13% (533016 trips)



-- Analysis 2

-- Q1:
-- What is the correlation between the number of passengers on any given trip, and the tip paid per trip? 
-- Do multiple travellers tip more compared to solo travellers? Hint: Use CORR(Col_1, Col_2)

select CORR(passenger_count, tip_amount) as correlation
from nyc_taxi_case_study_sh_partitioned_1;

select avg(tip_amount) as average_tip_amount, passenger_count
from nyc_taxi_case_study_sh_partitioned_1
group by passenger_count
order by passenger_count;

-- 	average_tip_amount	passenger_count
--	1.8365371156841597	1
--	1.828644016459055	2
--	1.7441695198662355	3
--	1.6058954015544074	4
--	1.8591016613997307	5
--  1.8160349331713284	6
--	5.2299999999999995	7

-- From the results we see that solo passengers tend to give tip more than group of 2,3 or 4 people but less than a group of 5,6 or 7 people
-- with a group of 7 being most generous in paying tips



-- Q2 Segregate the data into five segments of ‘tip paid’: [0-5), [5-10), [10-15) , [15-20) and >=20.
-- Calculate the percentage share of each bucket (i.e. the fraction of trips falling in each bucket)

select tip_bucket, round((count(*)*100/1155422),4) cnt
from (select
case when (tip_amount>=0 and tip_amount<5)   then '[0-5)' 
     when (tip_amount>=5 and tip_amount<10)  then '[5-10)' 
     when (tip_amount>=10 and tip_amount<15) then '[10-15)'
     when (tip_amount>=15 and tip_amount<20) then '[15-20)'
     when (tip_amount>=20)                   then '>=20' end tip_bucket
     from nyc_taxi_case_study_sh_partitioned_1) T 
     group by tip_bucket
     order by cnt desc;

--  tip_bucket	cnt
--	[0-5)	92.3874
--  [5-10)	5.6381
--  [10-15)	1.6951
--  [15-20)	0.1895
--  >=20	0.0898



-- Q3 Which month has a greater average ‘speed’ - November or December? 
-- Note that the variable ‘speed’ will have to be derived from other metrics. Hint: You have columns for distance and time.


-- We have calculated time by using difference between drop and pickup time and divided it by 3600 as the time difference
-- is in milliseconds and we need to calculate it in hours
-- Then we calculated speed using distance / time which gives us speed in miles/hour.

SELECT avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) as speed 
from nyc_taxi_case_study_sh_partitioned_1
where mnth = 11 ;

-- Average speed of November = 10.96miles/hour


SELECT avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) as speed 
from nyc_taxi_case_study_sh_partitioned_1
where mnth = 12 ;

-- Average speed of December = 11.06

-- Thus we see that the average speed in the month of December was slightly more than November


-- Q4 Analyse the average speed of the most happening days of the year,
-- i.e. 31st December (New year’s eve) and 25th December (Christmas) and compare it with the overall average



-- We have calculated time by using difference between drop and pickup time and divided it by 3600 as the time difference
-- is in milliseconds and we need to calculate it in hours
-- Then we calculated speed using distance / time which gives us speed in miles/hour.

SELECT avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) as speed 
from nyc_taxi_case_study_sh_partitioned_1
where mnth = 12 and
day(tpep_pickup_datetime) = 25 ;

-- The speed on Chrismas was 15.26 miles/hour which is around 38% more than the average of December


SELECT avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime))/3600)) as speed 
from nyc_taxi_case_study_sh_partitioned_1
where mnth = 12 and
day(tpep_pickup_datetime) = 31 ;

-- The speed on New year's eve that is 31st December was 13.24 miles/hour which is around 20% more than the average of December
